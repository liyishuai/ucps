(* generated by Ott 0.27, locally-nameless lngen from: ucps.ott *)
Require Import Metalib.Metatheory.
(** syntax *)
Definition x := var. (*r identifiers *)

Inductive e : Set :=  (*r terms *)
 | e_t : t -> e
 | e_s : s -> e
with t : Set :=  (*r trivial terms, \textit{i.e.} values *)
 | t_var_b : nat -> t
 | t_var_f : x -> t
 | t_abs : e -> t
with s : Set :=  (*r serious terms, \textit{i.e.} computations *)
 | s_app : e -> e -> s.

(* EXPERIMENTAL *)
(** auxiliary functions on the new list types *)
(** library functions *)
(** subrules *)
(** arities *)
(** opening up abstractions *)
Fixpoint open_e_wrt_t_rec (k:nat) (t_6:t) (K5:e) : e :=
  match K5 with
  | (e_t t5) => e_t (open_t_wrt_t_rec k t_6 t5)
  | (e_s s5) => e_s (open_s_wrt_t_rec k t_6 s5)
end
with open_s_wrt_t_rec (k:nat) (t5:t) (s5:s) : s :=
  match s5 with
  | (s_app e0 e1) => s_app (open_e_wrt_t_rec k t5 e0) (open_e_wrt_t_rec k t5 e1)
end
with open_t_wrt_t_rec (k:nat) (t5:t) (t_6:t) : t :=
  match t_6 with
  | (t_var_b nat) => 
      match lt_eq_lt_dec nat k with
        | inleft (left _) => t_var_b nat
        | inleft (right _) => t5
        | inright _ => t_var_b (nat - 1)
      end
  | (t_var_f x5) => t_var_f x5
  | (t_abs e5) => t_abs (open_e_wrt_t_rec (S k) t5 e5)
end.

Definition open_t_wrt_t t5 t_6 := open_t_wrt_t_rec 0 t_6 t5.

Definition open_s_wrt_t t5 s5 := open_s_wrt_t_rec 0 s5 t5.

Definition open_e_wrt_t t_6 K5 := open_e_wrt_t_rec 0 K5 t_6.

(** terms are locally-closed pre-terms *)
(** definitions *)

(* defns LC_s_t_e *)
Inductive lc_s : s -> Prop :=    (* defn lc_s *)
 | lc_s_app : forall (e0 e1:e),
     (lc_e e0) ->
     (lc_e e1) ->
     (lc_s (s_app e0 e1))
with lc_t : t -> Prop :=    (* defn lc_t *)
 | lc_t_var_f : forall (x5:x),
     (lc_t (t_var_f x5))
 | lc_t_abs : forall (e5:e),
      ( forall x5 , lc_e  ( open_e_wrt_t e5 (t_var_f x5) )  )  ->
     (lc_t (t_abs e5))
with lc_e : e -> Prop :=    (* defn lc_e *)
 | lc_e_t : forall (t5:t),
     (lc_t t5) ->
     (lc_e (e_t t5))
 | lc_e_s : forall (s5:s),
     (lc_s s5) ->
     (lc_e (e_s s5)).
(** free variables *)
(** substitutions *)

(** definitions *)


(** infrastructure *)
Hint Constructors lc_s lc_t lc_e.


